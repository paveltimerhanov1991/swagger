swagger: '2.0'
info:
  description: |
    This is a sample MobileStore server.
  version: 1.0.0
  title: Heiki ja Pavel Mobilestore
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@pavel.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
# host: petstore.swagger.io
# basePath: /v2
tags:
- name: mobile
  description: Everything about your Mobiles
  externalDocs:
    description: Find out more
    url: http://swagger.io
- name: store
  description: Access to MobileStore orders
- name: user
  description: Operations about user
  externalDocs:
    description: Find out more about our store
    url: http://pavel.time.ee
# schemes:
# - http
paths:
  /mobile:
    post:
      tags:
      - mobile
      summary: Add a new mobile to the store
      operationId: addMobile
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: Mobile object that needs to be added to the store
        required: true
        schema:
          $ref: '#/definitions/Mobile'
      responses:
        201:
          description: All good
          schema:
            $ref: '#/definitions/Mobile'
        400:
          description: Invalid entry
      security:
      - mobilestore_auth: []
    put:
      tags:
      - mobile
      summary: Update an existing mobile
      operationId: updateMobile
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: Mobile object that needs to be added to the store
        required: true
        schema:
          $ref: '#/definitions/Mobile'
      responses:
        201:
          description: Success
          schema:
            $ref: '#/definitions/Mobile'
        400:
          description: Invalid ID supplied
        404:
          description: Mobile not found
        405:
          description: Validation exception
      security:
      - mobilestore_auth: []
  /mobile/{mobileId}:
    get:
      tags:
      - mobile
      summary: Find mobile by ID
      description: Returns a single mobile
      operationId: getMobileById
      produces:
      - application/json
      - application/xml
      parameters:
      - name: mobileId
        in: path
        description: ID of mobile to return
        required: true
        type: integer
        format: int64
      responses:
        201:
          description: successful operation
          schema:
            $ref: '#/definitions/Mobile'
        400:
          description: Invalid ID supplied
        404:
          description: Mobile not found
      security:
      - mobilestore_auth: []
    post:
      tags:
      - mobile
      summary: Updates a mobile in the store with form data
      operationId: updateMobileWithForm
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      - application/xml
      parameters:
      - name: mobileId
        in: path
        description: ID of mobile that needs to be updated
        required: true
        type: integer
        format: int64
      - name: name
        in: formData
        description: Updated name of the mobile
        required: false
        type: string
      - name: status
        in: formData
        description: Updated status of the mobile
        required: false
        type: string
      responses:
        405:
          description: Invalid input
      security:
      - mobilestore_auth: []
    delete:
      tags:
      - mobile
      summary: Deletes a mobile
      operationId: deleteMobile
      produces:
      - application/json
      - application/xml
      parameters:
      - name: api_key
        in: header
        required: false
        type: string
      - name: mobileId
        in: path
        description: Mobile id to delete
        required: true
        type: integer
        format: int64
      responses:
        201:
          description: User deleted
        400:
          description: Invalid ID supplied
        404:
          description: Mobile not found
      security:
      - mobilestore_auth: []
  /user:
    get:
      tags:
      - user
      summary: Logs user into the system
      operationId: loginUser
      produces:
      - application/json
      - application/xml
      parameters:
      - name: username
        in: query
        description: The user name for login
        required: true
        type: string
      - name: password
        in: query
        description: The password for login in clear text
        required: true
        type: string
      responses:
        201:
          description: successful operation
          schema:
            type: string
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        400:
          description: Invalid username/password supplied
  /user/logout:
    get:
      tags:
      - user
      summary: Logs out current logged in user session
      operationId: logoutUser
      produces:
      - application/json
      - application/xml
      parameters: []
      responses:
        default:
          description: successful operation
  /user/{username}:
    get:
      tags:
      - user
      summary: Get user by user name
      operationId: getUserByName
      produces:
      - application/json
      - application/xml
      parameters:
      - name: username
        in: path
        description: The name that needs to be fetched. Use user1 for testing. 
        required: true
        type: string
      responses:
        201:
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        400:
          description: Invalid username supplied
        404:
          description: User not found
    put:
      tags:
      - user
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      produces:
      - application/json
      - application/xml
      parameters:
      - name: username
        in: path
        description: name that need to be updated
        required: true
        type: string
      - in: body
        name: body
        description: Updated user object
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        201:
          description: User updated
        400:
          description: Invalid user supplied
        404:
          description: User not found
    delete:
      tags:
      - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
      - application/json
      - application/xml
      parameters:
      - name: username
        in: path
        description: The name that needs to be deleted
        required: true
        type: string
      responses:
        400:
          description: Invalid username supplied
        404:
          description: User not found
      security:
        - mobilestore_auth: []   
securityDefinitions:
  mobilestore_auth:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    type: object
    required:
      - username
      - email
      - password
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      email:
        type: string
      password:
        type: string
    xml:
      name: User
  Mobile:
    type: object
    required:
    - title
    - description
    - imageUrl
    - userId
    - price
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
        example: phone
      description:
        type: string
        example: cool new phone
      imageUrl:
        type: string
      userId:
        type: string
      price: 
        type: number
    xml:
      name: Mobile
# Added by API Auto Mocking Plugin
host: localhost:3000
basePath: /api
schemes:
 - http
